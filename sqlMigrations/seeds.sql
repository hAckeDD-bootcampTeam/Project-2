LOCK TABLES `cacheObjs` WRITE;
INSERT INTO `cacheObjs` VALUES (1,'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise','A Promise is a proxy for a value not necessarily known when the promise is created. It allows you to associate handlers with an asynchronous action\'s eventual success value or failure reason. This lets asynchronous methods return values like synchronous methods: instead of immediately returning the final value, the asynchronous method returns a promise to supply the value at some point in the future.','2018-08-18 00:11:22','2018-08-18 00:11:22'),(2,'https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-promise-27fc71e77261','How Promises Work A promise is an object which can be returned synchronously from an asynchronous function. It will be in one of 3 possible states:  Fulfilled: onFulfilled() will be called (e.g., resolve() was called) Rejected: onRejected() will be called (e.g., reject() was called) Pending: not yet fulfilled or rejected A promise is settled if it’s not pending (it has been resolved or rejected). Sometimes people use resolved and settled to mean the same thing: not pending.  Once settled, a promise can not be resettled. Calling resolve() or reject() again will have no effect. The immutability of a settled promise is an important feature.  Native JavaScript promises don’t expose promise states. Instead, you’re expected to treat the promise as a black box. Only the function responsible for creating the promise will have knowledge of the promise status, or access to resolve or reject.','2018-08-18 00:11:39','2018-08-18 00:11:39'),(3,'https://javascript.info/promise-basics','let promise = new Promise(function(resolve, reject) {   // the function is executed automatically when the promise is constructed    // after 1 second signal that the job is done with the result \"done!\"   setTimeout(() => resolve(\"done!\"), 1000); });','2018-08-18 00:11:56','2018-08-18 00:11:56'),(4,'https://hackernoon.com/understanding-promises-in-javascript-13d99df067c1','var keepsHisWord; keepsHisWord = true; promise1 = new Promise(function(resolve, reject) {   if (keepsHisWord) {     resolve(\"The man likes to keep his word\");   } else {     reject(\"The man doesnt want to keep his word\");   } }); console.log(promise1);','2018-08-18 00:12:13','2018-08-18 00:12:13'),(5,'https://developers.google.com/web/fundamentals/primers/promises','This is what promises do, but with better naming. If HTML image elements had a \"ready\" method that returned a promise, we could do this:  img1.ready().then(function() {   // loaded }, function() {   // failed });  // and… Promise.all([img1.ready(), img2.ready()]).then(function() {   // all loaded }, function() {   // one or more failed });','2018-08-18 00:13:14','2018-08-18 00:13:14'),(6,'https://javascript.info/map-set-weakmap-weakset','Map is a collection of keyed data items, just like an Object. But the main difference is that Map allows keys of any type.  The main methods are:  new Map() – creates the map. map.set(key, value) – stores the value by the key. map.get(key) – returns the value by the key, undefined if key doesn’t exist in map. map.has(key) – returns true if the key exists, false otherwise. map.delete(key) – removes the value by the key. map.clear() – clears the map map.size – returns the current element count','2018-08-18 00:18:41','2018-08-18 00:18:41'),(7,'https://javascript30.com/','30 Day Vanilla JS Coding Challenge','2018-08-18 00:19:38','2018-08-18 00:19:38'),(8,'https://www.guitarlessons.com/guitar-lessons/rhythm-guitar-quick-start-series/common-chord-progressions','Welcome to the seventh video of the Rhythm Guitar Quick-Start Series. In this lesson, we’re going to put the bar chords you’ve learned to use by playing through some of the common chord progressions that you’ll see as a rhythm guitarist.','2018-08-18 00:23:43','2018-08-18 00:23:43'),(9,'https://www.justinguitar.com/modules/intermediate-foundation-1','In this first stage of the Foundation we are looking at many of the concepts that we will be exploring through the other stages as we continue, Barre chords, 16th note rhythms, The Major Scale, Notes on the fingerboard - all sorts of interesting stuff. You should find these Intermediate Foundation stages take a little longer than the beginner ones did. There is more to do and many of the things will take longer to explore properly. Take your time and do it well - there is no hurry here! Hope you enjoy it!','2018-08-18 00:24:14','2018-08-18 00:24:14'),(10,'https://www.ultimate-guitar.com/lessons/correct_practice/alternating_major__minor_arpeggio_licks.html','Alternating Major / Minor Arpeggio Licks Today, we\'re going to cover two different exercises that both focus on alternating major and minor arpeggio licks. These licks play off arpeggios with varying passages to connect the two together','2018-08-18 00:25:25','2018-08-18 00:25:25'),(11,'https://code.tutsplus.com/tutorials/authenticating-nodejs-applications-with-passport--cms-21619','Authenticating Node.js Applications With Passport','2018-08-18 00:26:56','2018-08-18 00:26:56'),(12,'https://stackoverflow.com/questions/22052258/what-does-passport-session-middleware-do','passport.session() acts as a middleware to alter the req object and change the \'user\' value that is currently the session id (from the client cookie) into the true deserialized user object.','2018-08-18 00:28:01','2018-08-18 00:28:01'),(13,'https://stackoverflow.com/questions/27055744/express-passport-js-req-user-versus-req-session-passport-user','You should always, always use req.user in your own code -- this is important because if you use req.session.passport.user, you\'re essentially pulling user information out of a session cookie (which may be outdated).  It\'s always best to rely on req.user as opposed to cookie data directly, as depending on your implementation, that information might be out of date.  And to answer your question: if you log a user out, both req.session and req.user will no longer be available.','2018-08-18 00:28:18','2018-08-18 00:28:18'),(14,'https://www.cookingwithnonna.com/italian-cuisine/nonnas-chicken-cutlets.html','For the Cutlets: 2 pounds chicken Cutlets, thinly sliced 1 cup bread crumbs, plain 4 cloves garlic, finely chopped 2 tablespoons fresh parsley, finely chopped 4 tablespoons grated Pecorino cheese pinch of salt pinch of fresh black pepper 2 large eggs olive oil for frying','2018-08-18 00:29:52','2018-08-18 00:29:52'),(15,'https://www.cookingwithnonna.com/italian-cuisine/mama-rosas-lasagna.html','Ingredients For 6 Person(s)   Recipe 35 ounces peeled tomatoes 1 tablespoon chopped onion 4 tablespoons extra virgin olive oil 1 tablespoon sugar salt & pepper 1 pound lasagna pasta 1 pound 93% ground beef 2 pounds ricotta 1 pound shredded/grated mozzarella cheese 1 cup grated parmesan or pecorino romano cheese','2018-08-18 00:32:24','2018-08-18 00:32:24'),(16,'https://www.allrecipes.com/recipe/223042/chicken-parmesan/?internalSource=streams&referringId=723&referringContentType=Recipe%20Hub&clickId=st_recipes_mades','\"My version of chicken parmesan is a little different than what they do in the restaurants, with less sauce and a crispier crust.\"','2018-08-18 00:33:43','2018-08-18 00:33:43'),(17,'https://www.foodnetwork.ca/recipe/roman-style-chicken/15493/','Roman-Style Chicken PREP TIME20 Min TOTAL TIME 60 Min SERVES 6','2018-08-18 00:34:49','2018-08-18 00:34:49'),(18,'https://www.ketoconnect.net/no-carb-pizza/','We\'ve turned dreams into reality with this amazing No Carb Pizza Crust recipe! It\'s truly exceptional in every way.  All you need is 3 ingredients, about 15 minutes, and a bunch of delicious toppings of your choice.  We know you hate reading, so we put together a quick keto pizza crust recipe video here to show you exactly how to make this!','2018-08-18 00:36:04','2018-08-18 00:36:04'),(19,'https://www.allrecipes.com/recipe/182811/egg-pesto-breakfast-wrap/?internalSource=streams&referringId=1310&referringContentType=Recipe%20Hub&clickId=st_recipes_mades','Egg Pesto Breakfast Wrap','2018-08-18 00:37:19','2018-08-18 00:37:19'),(20,'https://www.reddit.com/r/toronto/','News, People, Places, Events, Articles, and Discussions on Toronto; the largest city in Canada, and the provincial capital of Ontario.','2018-08-18 00:38:08','2018-08-18 00:38:08'),(21,'https://www.groupon.com/local/toronto/things-to-do','Top Things To Do in Toronto','2018-08-18 00:38:19','2018-08-18 00:38:19'),(22,'https://www.tripadvisor.ca/Attraction_Review-g155019-d5031404-Reviews-Ripley_s_Aquarium_Of_Canada-Toronto_Ontario.html','Explore the Waters of the World at Ripley\'s Aquarium of Canada. Located in the heart of downtown Toronto at the base of the CN Tower, the aquarium is Toronto\'s newest must-see attraction for tourists and locals of all ages.','2018-08-18 00:39:12','2018-08-18 00:39:12'),(23,'http://www.bellwoodsbrewery.com/','Bellwoods Brewery.','2018-08-18 00:42:32','2018-08-18 00:42:32'),(24,'https://www.muddyyorkbrewing.com/','MUDDY YORK BREWING CO','2018-08-18 00:43:13','2018-08-18 00:43:13'),(25,'http://www.bloodbrothersbrewing.com/','Blood Brothers Brewing','2018-08-18 00:44:18','2018-08-18 00:44:18'),(26,'https://godspeedbrewery.com/','GODSPEED BREWERY','2018-08-18 00:44:37','2018-08-18 00:44:37'),(27,'http://www.eastboundbeer.com/site/','Eastbound Brewing Company','2018-08-18 00:44:50','2018-08-18 00:44:50'),(28,'http://www.leftfieldbrewery.ca/','Left Field Brewery','2018-08-18 00:45:12','2018-08-18 00:45:12');
UNLOCK TABLES;


DROP TABLE IF EXISTS `tagObjs`;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `tagObjs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `tagName` varchar(255) NOT NULL,
  `createdAt` datetime NOT NULL,
  `updatedAt` datetime NOT NULL,
  `cacheObjId` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `cacheObjId` (`cacheObjId`),
  CONSTRAINT `tagobjs_ibfk_1` FOREIGN KEY (`cacheObjId`) REFERENCES `cacheobjs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=29 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


LOCK TABLES `tagObjs` WRITE;
INSERT INTO `tagObjs` VALUES (1,'Javascript Promises','2018-08-18 00:11:23','2018-08-18 00:11:23',1),(2,'Javascript Promises','2018-08-18 00:11:39','2018-08-18 00:11:39',2),(3,'Javascript Promises','2018-08-18 00:11:56','2018-08-18 00:11:56',3),(4,'Javascript Promises','2018-08-18 00:12:13','2018-08-18 00:12:13',4),(5,'Javascript Promises','2018-08-18 00:13:14','2018-08-18 00:13:14',5),(6,'Javascript','2018-08-18 00:18:41','2018-08-18 00:18:41',6),(7,'Javascript','2018-08-18 00:19:38','2018-08-18 00:19:38',7),(8,'Guitar','2018-08-18 00:23:43','2018-08-18 00:23:43',8),(9,'Guitar','2018-08-18 00:24:14','2018-08-18 00:24:14',9),(10,'Guitar','2018-08-18 00:25:25','2018-08-18 00:25:25',10),(11,'passport.js','2018-08-18 00:26:56','2018-08-18 00:26:56',11),(12,'passport.js','2018-08-18 00:28:01','2018-08-18 00:28:01',12),(13,'passport.js','2018-08-18 00:28:18','2018-08-18 00:28:18',13),(14,'Recipes','2018-08-18 00:29:52','2018-08-18 00:29:52',14),(15,'Recipes','2018-08-18 00:32:24','2018-08-18 00:32:24',15),(16,'Recipes','2018-08-18 00:33:43','2018-08-18 00:33:43',16),(17,'Recipes','2018-08-18 00:34:49','2018-08-18 00:34:49',17),(18,'Recipes','2018-08-18 00:36:04','2018-08-18 00:36:04',18),(19,'Recipes','2018-08-18 00:37:19','2018-08-18 00:37:19',19),(20,'Toronto','2018-08-18 00:38:08','2018-08-18 00:38:08',20),(21,'Toronto','2018-08-18 00:38:19','2018-08-18 00:38:19',21),(22,'Toronto','2018-08-18 00:39:12','2018-08-18 00:39:12',22),(23,'Toronto Breweries','2018-08-18 00:42:32','2018-08-18 00:42:32',23),(24,'Toronto Breweries','2018-08-18 00:43:13','2018-08-18 00:43:13',24),(25,'Toronto Breweries','2018-08-18 00:44:18','2018-08-18 00:44:18',25),(26,'Toronto Breweries','2018-08-18 00:44:37','2018-08-18 00:44:37',26),(27,'Toronto Breweries','2018-08-18 00:44:50','2018-08-18 00:44:50',27),(28,'Toronto Breweries','2018-08-18 00:45:12','2018-08-18 00:45:12',28);
UNLOCK TABLES;